name: Rust

on: [push]

jobs:
  test:
    name: Test using ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Run tests takolib
      run: cargo test --locked --release --verbose
    - name: Run tests takoc
      work-directory: ./takoc
      run: cargo test --locked --release --verbose
    - name: Run ignored tests takolib
      run: cargo test --locked --release --verbose -- --ignored
    - name: Run ignored tests takoc
      work-directory: ./takoc
      run: cargo test --locked --release --verbose -- --ignored
  
  build:
    name: Build using ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Build takolib
      run: cargo build --locked --release --verbose
    - name: Build takoc
      working-directory: ./takoc
      run: cargo build --locked --release --verbose
    - name: Upload executable Linux
      if: runner.os == 'Linux'
      uses: actions/upload-artifact@v1
      with:
        name: takoc
        path: target/release/takoc
    - name: Upload executable Windows
      if: runner.os == 'Windows'
      uses: actions/upload-artifact@v1
      with:
        name: takoc.exe
        path: target/release/takoc.exe
  
  lint:
    name: Lint using ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
    steps:
    - uses: actions/checkout@v1
    - uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    - name: Install clippy
      run: rustup component add clippy
    - name: Clippy takolib
      run: cargo clippy --all-features -- -D warnings
    - name: Clippy takoc
      working-directory: ./takoc
      run: cargo clippy --all-features -- -D warnings
    - name: Install fmt
      run: rustup component add rustfmt
    - name: Format
      run: cargo fmt --all -- --check
    - name: Format takoc
      working-directory: ./takoc
      run: cargo fmt --all -- --check
